#include "stdafx.h"
#include "iostream"
#include "conio.h"
using namespace std;

void cargar(int v[], int n)
{
 int x; 
 for(int i=0;i<n;i++)
 {
	 cout<<"Elemento:";
	 cin>>x;
	 v[i]=x;
 }
 cout<<endl;
}

void mostrar(int v[], int n)
{
 for(int i=0;i<n;i++)
	 cout<<v[i];

 cout<<endl;
}

void insertarPosicion(int v[], int &n, int x, int pos)
{
 if(pos < 0 || pos > n)
	 cout<<"Posicion no valida...!!!";
 else
 {
   int k=n-1;
   while(k>=pos)
   {
      v[k+1]=v[k];
	  k--;
   }
   v[pos]=x;
   n=n+1;
 }
}

void insertarUlt(int v[], int &n, int x)
{
   insertarPosicion(v,n,x,n); 
}

void insertarPri(int v[], int &n, int x)
{
   insertarPosicion(v,n,x,0); 
}

//funcion que elimina una posicion del vector
void eliminarPosicion(int v[], int &n, int pos)
{
 if(pos < 0 || pos > n)
  	cout<<"Posicion no valida...!!!";
 else
 {
    int k=pos + 1;
    while(k < n)
    {
       v[k-1]=v[k];
	   k++;
    }	
    n=n-1;
 }
}

void eliminarPri(int v[], int &n)
{
   eliminarPosicion(v,n,0); 
}

void eliminarUlt(int v[], int &n)
{
   eliminarPosicion(v,n,n-1); 
}

//funcion que elimina los elementos pares
void eliminarPares(int v[], int &n)
{
  int i=0;
  while(i<n)
  {
     if(v[i] % 2 == 0)
		 eliminarPosicion(v,n,i);
	 else
		 i++;
  }  
}

int suma (int v[],int n)
{

	if(n==1)
	{
		return v[0];
	}
	else
	{
		int x=suma(v,n-1);
		return x+v[n-1];
	}
}

int sumapares (int v[],int n)
{

	if(n==1)
	{
		if(v[0]%2==0)
			return v[0];
		else
			return 0;
	}
	else
	{
		int x=sumapares(v,n-1);

		if (v[n-1]%2==0)
		{
			return x+v[n-1];
		
		}
		else
		{
			return x;
		
		}

	}
}
int menor (int v[],int n)
{
	if(n==1)
		return v[0];
	else
	{
		int x=menor(v,n-1);
		if(v[n-1]<x)
			return v[n-1];
		else
			return x;
	}
}
void cuadrado(int v[],int n)
{
	if(n==1)
		v[0]=v[0]*v[0];
	else
	{
		cuadrado(v,n-1);
		v[n-1]=v[n-1]*v[n-1];
	}

}
bool existe(int v[],int n,int x)
{
	if(n==1)
	{
		if(v[0]==x)
			return true;
		else 
			return false;
	}
	else
	{
		bool t=existe(v,n-1,x);
		if(t==true)
			return true;
		else
		{
			if(v[n-1]==t)
				return true;
			else
				return false;
		}
	}
}
float promedio (int n, int v[])
{

	if (n==1)
		return v[0];
	else
	{
		float p= promedio(n-1,v);
		return (p*(n-1)+v[n-1])/n;
	}
}

	
void main()
{
	int n,pos,x,s;
	int v[50];
	cout<<"Dimension del vector:";
	cin>>n;
	cargar(v,n);
	cout<<"----------------------------------"<<endl;
	s=promedio(n,v);
	cout<<s<<endl;

	getch();
}
